name: Workflow

on:
  push:
    branches:
      - master

  schedule:
    - cron: "0 0 * * *"

jobs:
  fetch_air_data:
    runs-on: ubuntu-latest
    
    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: iterative/setup-dvc@v1
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: list everything
        run: ls -alh

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Pull data
        run:    
          dvc pull

      - name: Fetch air data
        run: python src/data/fetch_data.py

      - name: Commit changes
        run: |
          if [[ $(git status -s data) ]]; then
            dvc add data
            dvc commit --force
            dvc push -r origin
            git add data.dvc
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            git commit -m "update air_data"
            git push
          else
            echo "No changes in data file"
          fi
          
  preprocess_air_data:

    needs: fetch_air_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - uses: iterative/setup-dvc@v1

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install dvc
        run: |
          pip install dvc
          pip install fsspec==2022.7.1

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Pull data
        run: |
          git pull
        # dvc pull

      - name: Preprocess air data
        run: python src/data/preprocess_air_data.py

      - name: Commit changes
        run: |
          if [[ $(git status -s data) ]]; then
            dvc add data
            dvc commit --force
            dvc push -r origin
            git add data.dvc
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            git commit -m "update preprocess_air_data"
            git push
          else
            echo "No changes in data file"
          fi
        
        
        
  fetch_weather_data:
  
    runs-on: ubuntu-latest
    
    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: iterative/setup-dvc@v1
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Pull data
        run:    
          dvc pull

     - name: Fetch weather data
        run: python src/data/fetch_weather_data.py

      - name: Commit changes
        run: |
          if [[ $(git status -s data) ]]; then
            dvc add data
            dvc commit --force
            dvc push -r origin
            git add data.dvc
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            git commit -m "update fetch_weather_data"
            git push
          else
            echo "No changes in data file"
          fi

  preprocess_weather_data:

    needs: fetch_weather_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}

    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Process data
        run: python src/data/preprocess_weather_data.py

      - name: Install dvc
        run: |
          pip install dvc
          pip install fsspec==2022.7.1

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Pull data
        run:    
          dvc pull

      - name: Preprocess weather data
        run: python src/data/preprocess_weather_data.py

      - name: Commit changes
        run: |
          dvc commit --force
          dvc push -r origin
          git add data.dvc
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git commit -m "update preprocess_weather_data"
          git push
        
        
  merge_processed_data:
  
    needs: preprocess_weather_data
    
    runs-on: ubuntu-latest
    
    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
      
    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Process data
        run: python src/data/merge_processed_data.py

      - name: Install dvc
        run: |
          pip install dvc
          pip install fsspec==2022.7.1

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          
      

      - name: Merge processed data
        run: python src/data/merge_processed_data.py

      - name: Commit changes
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

  validate_data:
  
    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - uses: iterative/setup-dvc@v1

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install dvc
        run: |
          pip install dvc

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Pull data
        run: |
          git pull
          dvc pull

      - name: Validate data
        run: python src/data/data_validation.py

      - name: Commit changes
        run: |
          if [[ $(git status -s data) ]]; then
            dvc add data
            dvc commit --force
            dvc push -r origin
            git add data.dvc
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            git commit -m "update data_validation"
            git push
          else
            echo "No changes in data file"
          fi

      - name: Deploy DataDocs to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "great_expectations/uncommitted/data_docs/local_site"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}


  test_stability_data:

    needs: fetch_air_data
  
    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - uses: iterative/setup-dvc@v1

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install dvc
        run: |
          pip install dvc

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Pull data
        run: |
          git pull
          dvc pull

      - name: Test data stability
        run: python src/data/data_stability.py
        
      - name: Commit changes
        run: |
          if [[ $(git status -s data) ]]; then
            dvc add data
            dvc commit --force
            dvc push -r origin
            git add data.dvc
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            git commit -m "update data_stability"
            git push
          else
            echo "No changes in data file"
          fi

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest